name: DC Upload artifacts
author: Chaima Mansouri
description: Upload artifacts to Camunda download center
inputs:
  gcp_credentials:
    description: JSON key to access the GCP bucket
    required: true
  ee:
    description: The artifact is an enterprise release (set to 'true' if it an enterprise release)
    default: 'false'
    required: false
  env:
    description: The environment that the artifact will be uploded to (possible answers are prod, stage or dev)
    required: false
    default: 'prod'
  version:
    description: Artifact version
    required: false # version is not required since we have similar cases https://downloads.camunda.cloud/release/camunda-modeler/nightly/
  sub_version:
    description: Artifact sub version
    required: false
  artifact_subpath:
    description: In case the path longer than expected
    required: false
  artifact_file:
    description: Artifact(s) to upload. E.g. can contain a wildcard (*) or space separated string
    required: true
  repo_name:
    description: Variable which indicates the name of the repository which should be included in the upload subpath.
    default: ${{github.repository}}
    required: false

runs:
  using: "composite"

  steps:
  - name: Resolve variables
    shell: bash
    id: variables
    run: |
      # resolve bucket name
      if [[ "${{inputs.ee}}" == 'true' ]]; then
         if [[ "${{inputs.env}}" == 'prod' ]]; then
           bucket_name="downloads-camunda-cloud-enterprise-release"
         else
           bucket_name="${{inputs.env}}-downloads-camunda-cloud-enterprise-release"
         fi
      else
         if [[ "${{inputs.env}}" == 'prod' ]]; then
           bucket_name="downloads-camunda-cloud-release"
         else
           bucket_name="${{inputs.env}}-downloads-camunda-cloud-release"
         fi
      fi

      echo "bucket_name=${bucket_name}" >> "$GITHUB_OUTPUT"

      # resolve path
      subversion=''
      if [[ "${{inputs.sub_version}}" != '' ]]; then
        subversion="$(echo ${{inputs.sub_version}}/)"
      fi
      echo "subversion=${subversion}" >> "$GITHUB_OUTPUT"

      subpath=''
      if [[ "${{inputs.artifact_subpath}}" != '' ]]; then
        subpath=$(echo ${{inputs.artifact_subpath}}/)
      fi
      echo "subpath=${subpath}" >> "$GITHUB_OUTPUT"

      version=''
      if [[ "${{inputs.version}}" != '' ]]; then
         version="$(echo ${{inputs.version}}/)"
      fi
      echo "version=${version}" >> "$GITHUB_OUTPUT"

      # DC main repository
      dc_repo="$(echo ${{inputs.repo_name}} | cut -d'/' -f2)"
      echo "dc_repo=${dc_repo}" >> "$GITHUB_OUTPUT"

  - name: Authenticate to Google Cloud
    uses: 'google-github-actions/auth@v3'
    with:
      credentials_json: '${{ inputs.gcp_credentials }}'

  - name: Set up gcloud
    uses: 'google-github-actions/setup-gcloud@v3'

  - name: Upload files
    shell: bash
    run: |
      # the target buckets don't support parallel composite uploads
      # turning it off so there's no checks requiring higher service account permissions
      # https://stackoverflow.com/q/78548796
      gcloud config set storage/parallel_composite_upload_enabled false
      gcloud config set storage/parallel_composite_upload_compatibility_check false

      gcloud storage cp ${{ inputs.artifact_file }} gs://${{ steps.variables.outputs.bucket_name }}/${{ steps.variables.outputs.dc_repo }}/${{ steps.variables.outputs.subpath }}${{ steps.variables.outputs.version }}${{ steps.variables.outputs.subversion }}

branding:
  icon: upload
  color: orange
