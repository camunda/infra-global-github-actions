---
name: Build Docker Image

description: Builds Docker image for current repository in opinionated way.

inputs:
  registry_host:
    description: Registry host used for the Docker image, e.g. gcr.io.
    required: true
  registry_username:
    description: Registry username used for authenticating to registry host.
    required: false
  registry_password:
    description: Registry password used for authenticating to registry host.
    required: false
  # When using Workload Identity for authentication, username and a password will be ignored.
  # Providing neither will result in an error.
  use_workload_identity_auth:
    description: Use Google Workload Identity for authenticating to registry host.
    required: false
    default: 'false'
  image_name:
    description: Docker image name WITHOUT registry and WITHOUT Docker tag, e.g. example/image.
    required: true
  add_hosts:
    description: |
      Add a list of custom host-to-IP mapping (host:ip)
      https://docs.docker.com/reference/cli/docker/buildx/build/#add-entries-to-container-hosts-file---add-host
    required: false
  build_args:
    description: Docker build args to append to `docker build` command.
    required: false
  extra_tags:
    description: Extra tags that the image should get
    required: false
  force_push:
    description: Allow overwriting the push behaviour by setting it to 'true'
    required: false
    default: 'false'
  build_context:
    description: Docker build context.
    required: false
    default: '.'
  build_allow:
    description: Extra privilege entitlements to give builder.
    required: false
  build_platforms:
    description: List of [target platforms](https://docs.docker.com/engine/reference/commandline/buildx_build/#platform) for build
    required: false
    default: 'linux/amd64'
  buildx_driver:
    description: Driver for buildx builder.
    required: false
  buildx_version:
    description: Which release version of buildx action to use
    required: false
  docker_load:
    description: Whether load docker image from build into local Docker Images
    required: false
    default: 'false'
  job_summary:
    description: Enable GitHub job summary
    required: false
    default: 'false'
  qemu_image:
    description: QEMU static binaries Docker image
    required: false
    default: 'tonistiigi/binfmt:master'
  qemu_platforms:
    description: Platforms to install (e.g., `arm64,riscv64,arm`)
    required: false
    default: 'all'

outputs:
  image_digest:
    description: The image digest (sha256)
    value: ${{ steps.build-push.outputs.digest }}
  image_metadata:
    description:  The metedata output of the docker build and push action
    value: ${{ steps.build-push.outputs.metadata }}
  images: # metedata can often not be passed between jobs, therefore provide the image names on top
    description: Comma separated string of images including their tags
    value: ${{ steps.get-image-names.outputs.images }}
  pushed:
    description: The decision whether the image should be pushed or not
    value: ${{ steps.check-push.outputs.SHOULD_WE_PUSH }}

runs:
  using: composite
  steps:
  - name: Echo inputs
    shell: bash
    run: |
      echo "Inputs"
      echo "-----"
      echo "Registry host:   ${{ inputs.registry_host }}"
      echo "Image name:      ${{ inputs.image_name }}"
      echo "Build-Args:      ${{ inputs.build_args }}"
      echo "Context:         ${{ inputs.build_context }}"
      echo "Platforms:       ${{ inputs.build_platforms }}"
      echo "Allow:           ${{ inputs.build_allow }}"
      echo "Buildx Driver:   ${{ inputs.buildx_driver }}"
      echo "Buildx Version:  ${{ inputs.buildx_version }}"
      echo "QEMU Image:      ${{ inputs.qemu_image }}"
      echo "QEMU Platforms:  ${{ inputs.qemu_platforms }}"

  - name: Validate inputs
    shell: bash
    run: |
      if [ "${{ inputs.use_workload_identity_auth }}" == "false" ]; then
        if [ -z "${{ inputs.registry_username }}" ] || [ -z "${{ inputs.registry_password }}" ]; then
          echo "::error::When use_workload_identity_auth is false, registry_username and registry_password must be provided."
          exit 1
        fi
      fi
      if [ -z "${{ inputs.registry_host }}" ]; then
        echo "Need to specify a registry host that is not empty!"
        exit 1
      fi
      if [ -z "${{ inputs.image_name }}" ]; then
        echo "Need to specify an image name that is not empty!"
        exit 1
      fi

  - name: Calculate Docker image name
    id: meta
    uses: docker/metadata-action@v5
    with:
      images: |
        ${{ inputs.registry_host }}/${{ inputs.image_name }}
      flavor: |
        latest=false
      # See https://github.com/docker/metadata-action#tags-input=
      tags: |
        type=ref,event=branch
        type=ref,event=tag
        type=ref,event=pr
        type=raw,value=latest,enable={{is_default_branch}}
        ${{ inputs.extra_tags }}

  # See README.md for explained cases when we push
  - name: Check whether we should push
    id: check-push
    shell: bash
    run: |
      echo "SHOULD_WE_PUSH=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || startsWith(github.ref, 'refs/tags/') || endsWith(github.ref, '-push') || inputs.force_push == 'true' }}" | tee -a "$GITHUB_ENV" "$GITHUB_OUTPUT"

    # https://github.com/docker/setup-qemu-action
  - name: Set up QEMU
    id: qemu
    uses: docker/setup-qemu-action@v3
    with:
      image: ${{ inputs.qemu_image }}
      platforms: ${{ inputs.qemu_platforms }}

  - name: Set up Docker Buildx
    id: buildx
    uses: docker/setup-buildx-action@v3
    with:
      version: ${{ inputs.buildx_version }}
      driver: ${{ inputs.buildx_driver }}

  - name: Check for Google Workload Identity auth
    # Promote switching to Google Workload Identity authentication
    shell: bash
    if: ${{ env.SHOULD_WE_PUSH == 'true' && inputs.use_workload_identity_auth == 'false' }}
    run: echo "::warning::Workload Identity authentication is not enabled. To follow security best practices please consider switching. Proceeding with provided credentials."



  - name: Login to Docker registry
    uses: docker/login-action@v3
    # Only attempt login when we want to push and use a conventional login.
    # (The login step is not needed for Google Workload Identity.)
    # This avoids depending on a 3rd party service when not needed.
    # In case the registry is unavailable the non-push builds will continue to be green.
    if: ${{ env.SHOULD_WE_PUSH == 'true' && inputs.use_workload_identity_auth == 'false' }}
    with:
      registry: ${{ inputs.registry_host }}
      username: ${{ inputs.registry_username }}
      password: ${{ inputs.registry_password }}

  - name: Build and push Docker image
    id: build-push
    uses: docker/build-push-action@v6
    env:
      DOCKER_BUILD_SUMMARY: ${{ inputs.job_summary }}
    with:
      add-hosts: ${{ inputs.add_hosts }}
      allow: ${{ inputs.build_allow }}
      context: ${{ inputs.build_context }}
      builder: ${{ steps.buildx.output.name }}
      build-args: ${{ inputs.build_args }}
      platforms: ${{ inputs.build_platforms }}
      provenance: false
      push: ${{ env.SHOULD_WE_PUSH }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      load: ${{ inputs.docker_load }}

  - id: get-image-names
    shell: bash
    run: |
      imageNames=${{ fromJSON(steps.build-push.outputs.metadata)['image.name'] }}
      echo "images=$imageNames" >> "$GITHUB_OUTPUT"
