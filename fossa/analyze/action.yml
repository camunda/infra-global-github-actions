name: fossa analyze

description: Run FOSSA CLI analyze command

inputs:
  api-key:
    description: The API key to access fossa.com
    required: true
  branch:
    description: Name of the branch to be scanned
    required: true
  configuration-file:
    description: Path to the FOSSA configuration file
    required: false
    default: .fossa.yml
  path:
    description: Path to the directory for scanning
    default: .
    required: false
  revision-id:
    description: ID of the scanned revision
    required: true
runs:
  using: composite
  steps:
  - name: Run FOSSA analyze
    env:
      BRANCH: ${{ inputs.branch }}
      CONFIGURATION_FILE: ${{ inputs.configuration-file }}
      DIRECTORY_PATH: ${{ inputs.path }}
      FOSSA_ANALYZE_OUTPUT_LOG: ${{ runner.temp }}/fossa_analyze_output.log
      FOSSA_API_KEY: ${{ inputs.api-key }}
      REVISION_ID: ${{ inputs.revision-id }}
      TMP_DIR: ${{ runner.temp }}
    run: |
      set -e # Exit on error
      mkdir -p "${TMP_DIR}"

      fossa analyze "${DIRECTORY_PATH}" \
        --strict \
        --config "${CONFIGURATION_FILE}" \
        --branch "${BRANCH}" \
        --revision "${REVISION_ID}" 2>&1 | tee "${FOSSA_ANALYZE_OUTPUT_LOG}"

      # Check for failure patterns in the output
      if grep -qE "(projects scanned.*failed.*[^0] failed|Error:.*An issue occurred|Command execution failed)" "${FOSSA_ANALYZE_OUTPUT_LOG}"; then
        echo "⚠️ FOSSA analyze encountered issues! Check the output above for details." >&2
        exit 1
      fi

      rm "${FOSSA_ANALYZE_OUTPUT_LOG}" 2>/dev/null || true
    shell: bash
