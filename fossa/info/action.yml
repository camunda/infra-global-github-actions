name: fossa info

description: Provides context info required for other FOSSA composite actions.

inputs:
  github-token:
    description: |
      The GitHub token to use for API calls.
    default: ${{ github.token }}

outputs:
  is-pull-request:
    description: |
      True in the context of a pull request, false otherwise.
    value: ${{ steps.info.outputs.is-pull-request }}
  base-ref:
    description: |
      The ref (name) of the base branch in the context of a pull request.
      Empty if not a pull request.
    value: ${{ steps.info.outputs.base-ref }}
  base-revision:
    description: |
      The revision (commit SHA) of the base branch in the context of a pull request.
      Empty if not a pull request.
      Generally used to find (via diff) new license issues introduced by a PR.
    value: ${{ steps.info.outputs.base-revision }}
  base-revision-most-recent-with-scanning-results:
    description: |
      The latest base branch revision (commit SHA) with FOSSA scanning results.
      Useful when the base revision has no scanning results, such as after a manual merge commit that did not trigger a workflow (and so a scan).
      Empty if none found.
    value: ${{ steps.info-pr.outputs.base-ref-with-scanning-results }}
  head-ref:
    description: |
      The HEAD ref (name) of the branch to be analyzed by FOSSA, determined based on the context of the event.
    value: ${{ steps.info.outputs.head-ref }}
  head-revision:
    description: |
      The HEAD revision (commit sha) to be analyzed by FOSSA, determined based on the context of the event.
    value: ${{ steps.info.outputs.head-revision }}

runs:
  using: composite
  steps:
  - name: Get context info
    id: info
    env:
      IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
      BASE_REF: >
        ${{
          github.event_name == 'pull_request' &&
          github.event.pull_request.base.ref ||
          ''
        }}
      BASE_REVISION: >
        ${{
          github.event_name == 'pull_request' &&
          github.event.pull_request.base.sha ||
          ''
        }}
      HEAD_REF: >
        ${{
          github.event_name == 'pull_request' &&
          github.event.pull_request.head.ref ||
          github.ref_name
        }}
      HEAD_REVISION: >
        ${{
          github.event_name == 'pull_request' &&
          github.event.pull_request.head.sha ||
          github.sha
        }}
    run: |
      {
        echo "is-pull-request=${IS_PULL_REQUEST}"
        echo "base-ref=${BASE_REF}"
        echo "base-revision=${BASE_REVISION}"
        echo "head-ref=${HEAD_REF}"
        echo "head-revision=${HEAD_REVISION}"
      } >> $GITHUB_OUTPUT
    shell: bash
  - name: Get additional PR info
    if: ${{ steps.info.outputs.is-pull-request == 'true' }}
    id: info-pr
    env:
      BASE_REF: ${{ steps.info.outputs.base-ref }}
      BASE_REVISION: ${{ steps.info.outputs.base-revision }}
      GH_TOKEN: ${{ inputs.github-token }}
      WORKFLOW_NAME: ${{ github.workflow }}
    run: |
      # Check recent commits of the base commit for existing scanning results
      # history depth to search for scanning results
      depth=5

      # Ensure history is available for the base branch up to the specified depth
      git fetch origin "${BASE_REF}" --depth=200
      # If not enough, fetch more
      git rev-parse "${BASE_REVISION}~$((depth-1))" >/dev/null 2>&1 || \
        git fetch origin "${BASE_REF}" --unshallow

      # Ensure the GitHub CLI is installed
      if ! command -v gh &> /dev/null; then
        echo "GitHub CLI not found. Installing..."
        sudo apt update
        sudo apt install curl -y
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
          sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
          https://cli.github.com/packages stable main" | \
          sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y
      else
        echo "GitHub CLI is already installed."
      fi

      # Check if the base branch or its recent parents have scanning results
      base_ref_with_scanning_results=""
      for i in $(seq 0 $((depth-1))); do
        commit=$(git rev-parse "${BASE_REVISION}~$i" 2>/dev/null || true)
        # Check if a workflow run of "Check Licenses" succeeded for the commit
        if gh run list \
          --limit 1000 \
          --commit "$commit" \
          --json workflowName,conclusion \
          --jq '[.[] | select(.workflowName == "'"$WORKFLOW_NAME"'" and .conclusion == "success")] | any' | grep -q true; then
          if [ "$i" -gt 0 ]; then
             echo "Scanning result found for commit=$commit, which is $i commit(s) behind the base branch/ref."
          fi
          base_ref_with_scanning_results=$commit
          break
        fi
      done
      if [ -z "$base_ref_with_scanning_results" ]; then
        echo "No scan results found for base branch '${BASE_REF}' (revision: ${BASE_REVISION}) or any of its recent ancestors."
        echo "::warning::No commit in the recent history of the base branch has scan results available."
        echo "This likely indicates that recent scans for the base branch have failed and need to be addressed."
        echo "Scan results for the base branch are required to compute a diff and identify license issues introduced by this PR. Without it, license checks will likely fail."
      fi
      echo "base-ref-with-scanning-results=${base_ref_with_scanning_results}" >> $GITHUB_OUTPUT
    shell: bash
