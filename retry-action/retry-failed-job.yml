name: Retrigger failed run action

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: The id of the which we want to retrigger
        required: true
      error_message:
        description: Custom error message to look for in the logs.
        required: true
      repository:
        description: Github repository
        required: true
jobs:
  rerun:
    runs-on: ubuntu-latest
    steps:
      - name: Check previous run logs
        id: check_logs
        env:
          GH_TOKEN: ${{ inputs.app_access_token }}
          GH_DEBUG: api
        run: |
          echo "Fetching logs for run with id: ${{ inputs.run_id }} from ${{ inputs.repository }} repository."
          
          # Fetch the logs from the previous run
          logs=$(gh run view ${{ inputs.run_id }} -R ${{ inputs.repository }} --log)
          
          echo "Logs coming from run with id: ${{ inputs.run_id }}"
          echo "$logs"
          
          # Check if the desired string is present in the logs
          if echo "$logs" | grep -q "$error_message"; then
            echo "::set-output name=rerun::true"
            echo "Error message $error_message found in logs"
          else
            echo "::set-output name=rerun::false"
            echo "Error message $error_message not found in logs"
          fi

      - name: Rerun run with id ${{ inputs.run_id }} for ${{ inputs.repository }} repository
        if: steps.check_logs.outputs.rerun == 'true'
        env:
          GH_TOKEN: ${{ inputs.app_access_token }}
          GH_DEBUG: api
        run: |
          gh run watch ${{ inputs.run_id }}  -R ${{ inputs.repository }} > /dev/null 2>&1
          gh run rerun ${{ inputs.run_id }}  -R ${{ inputs.repository }} --failed