---
name: Rerun failed run

description: Retrigger a GitHub Actions workflow run that has failed with a specific error message

inputs:
  run-id:
    description: The id of the workflow run to re-trigger
    required: true
  repository:
    description: The name of the repository to which the workflow run belongs
    required: true
  error-messages:
    description: The error messages to check for in the workflow run logs. The workflow will be rerun only if at least one of the given messages is found in the logs of a failed job.
    required: true
  vault-addr:
    description: The Vault URL for fetching secrets
    required: true
  vault-role-id:
    description: The Vault role ID for fetching secrets
    required: true
  vault-secret-id:
    description: The Vault secret ID for fetching secrets
    required: true
  notify-back-on-error:
    description: |-
      When the error message does not match the expected one,
      re-trigger the workflow with the parameter `notify_back_error_message`.
      Your calling workflow must implement the `notify_back_error_message` parameter
      and forward the error.
      This allows you to capture failures that are not related to a specific error.
    default: "false"

runs:
  using: composite
  steps:
    - name: Import Secrets
      id: vault-secrets
      uses: hashicorp/vault-action@v3.3.0
      with:
        url: ${{ inputs.vault-addr }}
        method: approle
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}
        secrets: |
          secret/data/products/infra/ci/retrigger-gha-workflow RETRIGGER_APP_ID;
          secret/data/products/infra/ci/retrigger-gha-workflow RETRIGGER_APP_KEY;

    - name: Generate a GitHub token for infra-rerun camunda/infra-global-github-actions
      id: github-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ steps.vault-secrets.outputs.RETRIGGER_APP_ID }}
        private-key: ${{ steps.vault-secrets.outputs.RETRIGGER_APP_KEY }}
        owner: camunda
        repositories: infra-global-github-actions

    - name: Get repository name and owner
      id: repository
      env:
        REPOSITORY: ${{ inputs.repository }}
      run: |
        echo "owner=${REPOSITORY%/*}" | tee -a "$GITHUB_OUTPUT"
        echo "name=${REPOSITORY##*/}" | tee -a "$GITHUB_OUTPUT"
      shell: bash

    - name: Convert error messages list to JSON
      id: error-messages
      env:
        ERROR_MESSAGES: ${{ inputs.error-messages }}
      run: |
        messages_json=$(
          echo "${ERROR_MESSAGES}" | \
            jq -c -n -R '[inputs | select(length > 0)]' | \
            jq -R .
        )
        echo json="${messages_json}" | tee -a $GITHUB_OUTPUT
      shell: bash

    - name: Trigger retry-worfklow-run.yml
      uses: codex-/return-dispatch@v2
      id: dispatch
      with:
        owner: camunda
        repo: infra-global-github-actions
        ref: main
        workflow: retry-worfklow-run.yml
        token: ${{ steps.github-token.outputs.token }}
        workflow_inputs: |
          {
            "error-messages": ${{ steps.error-messages.outputs.json }},
            "notify-back-git-ref": "${{ github.ref_name }}",
            "notify-back-on-error": "${{ inputs.notify-back-on-error }}",
            "owner": "${{ steps.repository.outputs.owner }}",
            "repository": "${{ steps.repository.outputs.name }}",
            "run-id": "${{ inputs.run-id }}"
          }
        workflow_timeout_seconds: 120

    - name: Get URL of the new worfklow run dispatched, run-id=${{ steps.dispatch.outputs.run_id }}
      if: steps.dispatch.outputs.run_id != ''
      env:
        RUN_URL: ${{ steps.dispatch.outputs.run_url }}
      run: |
        echo "::warning::If specified errors are detected, failed jobs will be retried by ${RUN_URL}"
      shell: bash
