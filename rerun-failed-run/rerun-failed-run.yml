name: Retrigger failed run action

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: The ID of the workflow run to retrigger
        required: true
      error_message:
        description: Custom error message to look for in the logs
        required: true
      repository:
        description: GitHub repository (ORG/REPO_NAME)
        required: true
jobs:
  rerun:
    runs-on: ubuntu-latest
    steps:
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.8.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/infra/ci/retrigger-gha-workflow RETRIGGER_APP_KEY;
            secret/data/products/infra/ci/retrigger-gha-workflow RETRIGGER_APP_ID;

      - name: Generate a GitHub token
        id: github-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ steps.secrets.outputs.RETRIGGER_APP_ID }}
          private_key: ${{ steps.secrets.outputs.RETRIGGER_APP_KEY }}

      - name: Check previous run logs
        id: check_logs
        env:
          GH_DEBUG: api
        run: |
          echo ${{ steps.github-token.outputs.token }} | gh auth login --with-token
          echo "Fetching logs for run with id: ${{ inputs.run_id }} from ${{ inputs.repository }} repository."
          # Fetch the logs from the previous run
          gh config set pager cat
          logs=$(gh run view ${{ inputs.run_id }} -R ${{ inputs.repository }} --exit-status || true)
          echo "Logs coming from run with id: ${{ inputs.run_id }}"
          echo "$logs"
          error_count=$(echo "$logs" | grep -F "${{ inputs.error_message }}" | wc -l)
          echo "error_count: $error_count"
          if [ "$error_count" -gt 0 ]; then
              echo "rerun=true" >> $GITHUB_OUTPUT
              echo "Error message ${{ inputs.error_message }} found in logs so the previous run has finished with that error."
          else
              echo "rerun=false" >> $GITHUB_OUTPUT
              echo "Error message ${{ inputs.error_message }} not found in logs"
          fi

      - name: Rerun run with id ${{ inputs.run_id }} for ${{ inputs.repository }} repository
        if: steps.check_logs.outputs.rerun == 'true'
        env:
          GH_DEBUG: api
        run: |
          echo ${{ steps.github-token.outputs.token }} | gh auth login --with-token
          gh run rerun ${{ inputs.run_id }} -R ${{ inputs.repository }} --failed
