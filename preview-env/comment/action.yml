---
name: Manage Deployment Result Summary
description: |
  Manages a deployment result summary as comment in the current PR based on deployment artifacts.
  If deployment artifacts have been uploaded, the action upserts the summary.
  If there are no deployment artifacts, the summary will get deleted.
  The deployment artifact name pattern: `deployment-status-<runID>-<runAttempt>-*`
runs:
  using: composite
  steps:
    - name: Download Deployment Status Artifacts
      uses: actions/download-artifact@v4
      with:
        path: deployment_status
        pattern: deployment-status-${{ github.run_id }}-${{ github.run_attempt }}-*
    - name: Check for deployment artifacts
      id: check_artifacts
      shell: bash
      run: |
        if [ -d deployment_status ] && find deployment_status -type f -name '*.md' | grep -q .; then
          echo "::set-output name=artifacts_found::true"
        else
          echo "::set-output name=artifacts_found::false"
        fi
    - name: Create deployment status summary
      if: steps.check_artifacts.outputs.artifacts_found == 'true'
      shell: bash
      run: |
        shopt -s globstar   # enables the `**` wildcard
        summary="# :rocket: Deployment Results :rocket:\n"
        summary+=$(cat deployment_status/**/*.md)
        echo -e "$summary" | tee summary.md
    - name: Upsert Deployment Result Summary
      if: steps.check_artifacts.outputs.artifacts_found == 'true'
      uses: mshick/add-pr-comment@v2
      with:
        message-path: summary.md
        refresh-message-position: true
    - name: Get PR comments
      if: steps.check_artifacts.outputs.artifacts_found == 'false'
      id: get-comments
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:owner/:repo/issues/:issue_number/comments
        owner: ${{ github.repository_owner }}
        repo: ${{ github.event.repository.name }}
        issue_number: ${{ github.event.pull_request.number }}
    - name: Delete comment by contents
      if: steps.check_artifacts.outputs.artifacts_found == 'false' && ${{ steps.get-comments.outputs.comments != '[]' }}
      uses: actions/github-script@v7
      with:
        script: |
          const comments = ${{ steps.get-comments.outputs.data }};
          const targetComment = comments.find(comment => comment.body.includes('<!-- add-pr-comment:add-pr-comment -->'));
          if (targetComment) {
            await github.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: targetComment.id
            });
            console.log(`Deleted comment with ID: ${targetComment.id}`);
          } else {
            console.log('No comment found to delete.');
          }
