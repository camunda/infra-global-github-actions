---
name: Clean preview environments

description: Detect and stop preview environments that have been deployed for more than a given time.

inputs:
  dry-run:
    description: If true, disables side effects (e.g. for testing purposes).
    default: "false"
  labels:
    description: Comma-separated list of labels used to deploy preview environment.
    default: deploy-preview
    required: true
  pull-request:
    description: |
      Limit cleanup to a single pull request (number) and a minimal mode. Only inconsistent comments related to preview environment(s) are removed.
      Useful for quickly eliminating inconsistencies (e.g., after running preview-env deploy or teardown workflows), while waiting for the full cleanup cycle to run.
  repository:
    description: |
      Target GitHub repository with preview environments to clean (in `owner/name` format).
      Set to the current repository by default.
  shutdown-message:
    description: |
      A message template to inform user of the complete shutdown of preview environment.
      Use GitHub syntax (https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)
    default: |
      ## Preview environment

      > [!NOTE]
      > **Preview environment(s) has/have been shutdown automatically** as there has been no activity during the last `{ttl-days}` days).
      > cc {actors}

      ⏯️ **Want to deploy preview environment(s) again ?**
      Simply add a deploy label (`{preview-labels}`) to the PR.
    required: true
  ttl:
    description: Lifetime before a preview environment is candidate for shutdown (e.g. 2d, 15h, 35m, 5s).
    default: 21d
    required: true
  token:
    description: |
      GitHub token with necessary permissions.
      Default $GITHUB_TOKEN cannot be used, otherwise no event will be triggered when removing labels from a PR.
    required: true
  warning-message:
    description: |
      A message to warn user of the upcoming shutdown of preview environment.
      Use GitHub syntax (https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)
    default: |
      ## Preview environment

      > [!WARNING]
      > **Preview environment(s) will be automatically stopped after `{shutdown-date}` (~{days-to-shutdown} days)** as there has been no activity recently.
      > cc {actors}

      ⏹️ **No longer need preview environment(s) ?**
      You can stop it/them immediately by removing deploy label(s) `{preview-labels}` from the PR. You can always redeploy it at a later time.

      ⏯️ **Want to keep preview environment(s) for longer ?**
      Simply push a new commit or restart the deployment [workflow]({checks-url}) to **postpone the shutdown to `{ttl-days} day(s)` from now**.
  warning-ttl:
    description: |
      Duration since last deployment after which users are warned of the upcoming shutdown of preview environment(s) (e.g. 2d, 15h, 35m, 5s).
      Skipped if set to 0. Must be lower than `ttl`
    default: 0s

runs:
  using: composite
  steps:
  - name: Check and process inputs
    id: inputs
    env:
      TTL: ${{ inputs.ttl }}
      WARNING_MESSAGE: ${{ inputs.warning-message }}
      WARNING_TTL: ${{ inputs.warning-ttl }}
    run: |
      set -e

      # Function to parse and convert a duration in seconds
      time2seconds() {
        sed '
          s/d/*24*3600 +/g;
          s/h/*3600 +/g;
          s/m/*60 +/g;
          s/s/\+/g;
          s/+[ ]*$//g
        ' <<< "$1" | bc
      }

      # Convert ttl in seconds
      ttl_seconds=$(time2seconds $TTL)
      echo ttl-seconds=$ttl_seconds >> $GITHUB_OUTPUT

      # Convert warning-ttl in seconds
      warning_ttl_seconds=$(time2seconds $WARNING_TTL)
      echo warning-ttl-seconds=$warning_ttl_seconds >> $GITHUB_OUTPUT

      if [ $warning_ttl_seconds -gt $ttl_seconds ]; then
        echo warning-ttl-seconds must be less than ttl-seconds
        exit 1
      fi

      if [ $warning_ttl_seconds -gt 0 ] && [ -z "$WARNING_MESSAGE" ]; then
        echo "warning-message must be set if warning-ttl > 0"
      fi
    shell: bash
  - name: Full cleanup cycle
    if: inputs.pull-request == 0
    env:
      DRY_RUN: ${{ inputs.dry-run }}
      GH_REPO: ${{ inputs.repository || github.repository }}
      GH_TOKEN: ${{ inputs.token }}
      LABELS: ${{ inputs.labels }}
      SHUTDOWN_MESSAGE: ${{ inputs.shutdown-message }}
      TTL: ${{ steps.inputs.outputs.ttl-seconds }}
      WARNING_MESSAGE: ${{ inputs.warning-message }}
      WARNING_TTL: ${{ steps.inputs.outputs.warning-ttl-seconds }}
    run: |
      bash ${{ github.action_path }}/cleanup.sh
    shell: bash
  - name: Limited cleanup (PR \#${{inputs.pull-request}})
    if: inputs.pull-request != 0
    env:
      DRY_RUN: ${{ inputs.dry-run }}
      GH_REPO: ${{ inputs.repository || github.repository }}
      GH_TOKEN: ${{ inputs.token }}
      LABELS: ${{ inputs.labels }}
      PULL_REQUEST: ${{ inputs.pull-request }}
    run: |
      bash ${{ github.action_path }}/limited-cleanup.sh
    shell: bash
