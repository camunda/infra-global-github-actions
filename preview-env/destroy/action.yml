---
name: Destroy preview environment

description: Destroy preview environment.

inputs:
  app_name:
    description: Argocd app name to be deleted.
    required: true

  revision:
    description: Revision or branch of the Helm chart. Typically the branch to be deployed, or `master`.
    required: true

  argocd_server:
    description: URL of the Argo CD instance to target.
    required: false
    default: argocd.int.camunda.com

  argocd_token:
    description: An Argo CD token with sufficient permissions to create Applications.
    required: true

  argocd_version:
    # renovate: datasource=docker depName=quay.io/argoproj/argocd
    default: v2.14.9
    description: Version tag of Argo CD CLI tool
    required: false

  github_token:
    description: |-
      GitHub token used to delete the deployment and the environment;
      If present, the deployment environment also gets deleted.
      Token must include deployments:write and administration:write permissions
      for environment to be deleted
    required: false

runs:
  using: composite
  steps:
  - name: Restore cache
    uses: actions/cache@v4
    id: tool-cache-argocd
    with:
      path: /usr/local/bin/argocd
      key: ${{ runner.os }}-tool-cache-argo-${{ inputs.argocd_version }}
  - name: Setup Argo CD
    shell: bash
    if: ${{ steps.tool-cache-argocd.outputs.cache-hit != 'true' }}
    run: |-
      curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/${{ inputs.argocd_version }}/argocd-linux-amd64
      chmod +x /usr/local/bin/argocd
      argocd version
    env:
      ARGOCD_AUTH_TOKEN: ${{ inputs.argocd_token }}
      ARGOCD_OPTS: "--grpc-web"
      ARGOCD_SERVER: ${{ inputs.argocd_server }}

  - name: Tear down
    shell: bash
    run: argocd app delete ${{ inputs.app_name }} --yes
    env:
      ARGOCD_AUTH_TOKEN: ${{ inputs.argocd_token }}
      ARGOCD_OPTS: "--grpc-web"
      ARGOCD_SERVER: ${{ inputs.argocd_server  }}

  - uses: bobheadxi/deployments@v1.5.0
    if: always()
    name: Deactivate GitHub Deployment environment
    with:
      step: deactivate-env
      token: "${{ github.token }}"
      env: ${{ inputs.app_name }}
      ref: ${{ inputs.revision }}

  - name: Verify protected environment
    id: removable-environment
    shell: bash
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}
      ENVIRONMENT: ${{ inputs.app_name }}
    run: |-
      echo "Verifying if GitHub Environment can be deleted"
      is_removable="false"
      if [[ -n "$GITHUB_TOKEN" ]]; then
        case "$ENVIRONMENT" in
          production | stage | main | master )
            echo "Environment '$ENVIRONMENT' is protected and can't be removed"
            ;;
          *)
            is_removable="true"
            ;;
        esac
      else
        echo "No GitHub token provided, environment can't be removed"
      fi
      echo "is-removable=$is_removable" | tee -a $GITHUB_OUTPUT

  - uses: bobheadxi/deployments@v1.5.0
    if: ${{ steps.removable-environment.outputs.is-removable == 'true' }}
    name: Delete GitHub Environment
    with:
      step: delete-env
      token: "${{ inputs.github_token }}"
      env: ${{ inputs.app_name }}
      ref: ${{ inputs.revision }}
